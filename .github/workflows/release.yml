# name: Release

# on:
#   push:
#     branches:
#       - main

# concurrency: ${{ github.workflow }}-${{ github.ref }}

# jobs:
#   release:
#     name: Release
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Repo
#         uses: actions/checkout@v4

#       - name: Setup Node.js 20.x
#         uses: actions/setup-node@v4
#         with:
#           node-version: 20

#       - name: Install Dependencies
#         run: yarn

#       - name: Create Release Pull Request or Publish to npm
#         id: changesets
#         uses: changesets/action@v1
#         with:
#           # This expects you to have a script called release which does a build for your packages and calls changeset publish
#           publish: yarn release
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

#       - name: Send a Slack notification if a publish happens
#         if: steps.changesets.outputs.published == 'true'
#         # You can do something when a publish happens.
#         run: my-slack-bot send-notification --message "A new version of ${GITHUB_REPOSITORY} was published!"

# BELOW IS A QUICK DEPLOYMENT WORKFLOW WHILE THE DYNAMIC BUILD PROCESS IS DEVELOPED
# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the www.thekeepstudios.com app
          path: './apps/www.thekeepstudios.com'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
